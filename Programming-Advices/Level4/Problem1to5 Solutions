#1:
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printYourName("saleem");
        }
        static void printYourName(string name)
        {
            Console.WriteLine("Your Name is: {0}",name);
        }
    }
}
==========================================================================================
#2:
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printYourName(readUserName());
        }
        static string readUserName()
        {
            Console.Write("Please Enter Your Name: ");
            string userName = Console.ReadLine();
            return userName;
        }
        static void printYourName(string name)
        {
            Console.WriteLine("Your Name is: {0}",name);
        }
    }
}
==========================================================================================
#3:
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printNumberType(checkNumberType(readNumber()));
        }
        enum enNumberType { Even, Odd};
        static int readNumber()
        {
            Console.Write("Please Enter The Number: ");
            int number = int.Parse(Console.ReadLine());
            return number;
        }
        static enNumberType checkNumberType(int number)
        {
            if (number % 2 == 0) return enNumberType.Even;
            else return enNumberType.Odd;
        }
        static void printNumberType(enNumberType numberType)
        {
            if (numberType == enNumberType.Even)
                Console.WriteLine("The Number is {0}", enNumberType.Even);
            else
                Console.WriteLine("The Number is {0}", enNumberType.Odd);
        }
    }
}
==========================================================================================
#4:
(1-Me):
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printApplicationStatus(isHired(readAge(), readDriverLicense()));
        }
        enum jobApplicationStatus { Hired, Rejected };
        static byte readAge()
        {
            Console.Write("Please Enter Your Age: ");
            byte age = byte.Parse(Console.ReadLine());
            return age;
        }
        static char readDriverLicense()
        {
            Console.Write("Are you have a driver license? Y/N: ");
            char driverLicense = char.Parse(Console.ReadLine());
            return driverLicense;
        }
        static jobApplicationStatus isHired (byte age, char driverLicense)
        {
            if (age > 21 && driverLicense.ToString().ToUpper() == "Y")
                return jobApplicationStatus.Hired;
            else return jobApplicationStatus.Rejected;
        }
        static void printApplicationStatus(jobApplicationStatus jobApplicationStatus)
        {
            if (jobApplicationStatus == jobApplicationStatus.Hired)
                Console.WriteLine(jobApplicationStatus.Hired);
            else
                Console.WriteLine(jobApplicationStatus.Rejected);
        }
    }
}
---------------------------------------------------------------------------------------
(2-prof):
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printResult(readUserInfo());
        }
        enum jobApplicationOptions { Hired, Rejected};
        struct UserInfo
        {
            public byte age;
            public bool hasDriverLicense;
        }
        static UserInfo readUserInfo()
        {
            UserInfo userInfo = new UserInfo();
            Console.Write("Please Enter Your Age: ");
            userInfo.age = byte.Parse(Console.ReadLine());
            Console.Write("Are You have a Driver License? Y/N :");
            userInfo.hasDriverLicense = Console.ReadLine().ToLower() == "y" ? true : false;

            return userInfo;
        }
        static bool isAccepted(UserInfo userInfo)
        {
            return (userInfo.age > 21 && userInfo.hasDriverLicense);
        }
        static void printResult(UserInfo userInfo)
        {
            if (isAccepted(userInfo))
                Console.WriteLine(jobApplicationOptions.Hired);
            else
                Console.WriteLine(jobApplicationOptions.Rejected);
        }
    }
}

==========================================================================================
#5:
using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            printResult(readUserInfo());
        }
        enum jobApplicationOptions { Hired, Rejected};
        struct UserInfo
        {
            public byte age;
            public bool hasDriverLicense;
            public bool hasReccomendation;
        }
        static UserInfo readUserInfo()
        {
            UserInfo userInfo = new UserInfo();
            Console.Write("Are You have a Reccomendation? Y/N :");
            userInfo.hasReccomendation = Console.ReadLine().ToLower() == "y" ? true : false;
            if (userInfo.hasReccomendation) return userInfo;

            Console.Write("Please Enter Your Age: ");
            userInfo.age = byte.Parse(Console.ReadLine());
            Console.Write("Are You have a Driver License? Y/N :");
            userInfo.hasDriverLicense = Console.ReadLine().ToLower() == "y" ? true : false;

            return userInfo;
        }
        static bool isAccepted(UserInfo userInfo)
        {
            return userInfo.hasReccomendation || userInfo.age > 21 && userInfo.hasDriverLicense;
        }
        static void printResult(UserInfo userInfo)
        {
            if (userInfo.hasReccomendation || isAccepted(userInfo))
                Console.WriteLine(jobApplicationOptions.Hired);
            else
                Console.WriteLine(jobApplicationOptions.Rejected);
        }
    }
}
