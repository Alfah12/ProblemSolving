using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            int userRounds = readNumber("Please Enter a Positive Rounds Number: ", 1, 100);
            PlayGame(userRounds);
            printFinalGameReport(lstOfGameReport);

        }
        enum enPlayerChoise { Rock, Paper, Scissors };
        enum enRoundWinner { User, Computer, Both };
        static int readNumber(string message, int from, int to)
        {
            int number = 0;
            do
            {
                Console.Write(message);
                number = int.Parse(Console.ReadLine());
            } while (!isValidNumberInRange(number, from, to));

            return number;
        }
        static bool isValidNumberInRange(int number, int from, int to) => number >= from && number <= to ? true : false;
        static void playerChoiseMenue(int roundNumber)
        {
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("==========Round(" + roundNumber + ")==========" + "\n" +
                    "(1) Rock" + "\n" +
                    "(2) Paper" + "\n" +
                    "(3) Scissors");
        }
        static int generateRandomNumber()
        {
            Random random = new Random();
            return random.Next(1, 3);
        }
        static enPlayerChoise mappingPlayerChoise(int playerChoise)
        {
            if (playerChoise == 1)
                return enPlayerChoise.Rock;
            else if (playerChoise == 2)
                return enPlayerChoise.Paper;
            else
                return enPlayerChoise.Scissors;
        }
        static enPlayerChoise computerChoise() => mappingPlayerChoise(generateRandomNumber());
        static enRoundWinner roundWinner(enPlayerChoise userChoise, enPlayerChoise computerChoise)
        {
            if (userChoise == computerChoise)
                return enRoundWinner.Both;
            else if (userChoise == enPlayerChoise.Rock && computerChoise == enPlayerChoise.Scissors ||
                     userChoise == enPlayerChoise.Paper && computerChoise == enPlayerChoise.Rock ||
                     userChoise == enPlayerChoise.Scissors && computerChoise == enPlayerChoise.Paper)
                return enRoundWinner.User;
            else
                return enRoundWinner.Computer;

        }
        static void PlayGame(int userRounds)
        {
            for (int i = 1; i <= userRounds; i++)
            {
                playerChoiseMenue(i);
                enPlayerChoise userChoise = mappingPlayerChoise(readNumber("Enter a Valid Number Between 1 and 3: ", 1, 3)),
                               computerChoissse = computerChoise();

                enRoundWinner roundWinnerrr = roundWinner(userChoise, computerChoissse);

                Console.WriteLine();
                Console.WriteLine("---------Round {0} Results ---------", i);
                Console.WriteLine("user Choise is: {0}", userChoise);
                Console.WriteLine("Computer Choise is: {0}", computerChoissse);
                Console.WriteLine("The Winner is: {0}", roundWinnerrr);

                lstOfGameReport.Add(roundWinnerrr);
            }
        }
        static List<enRoundWinner> lstOfGameReport = new List<enRoundWinner>();
        static int maxNumber(int number1, int number2) => number1 >= number2 ? number1 : number2;
        static void printFinalGameReport(List<enRoundWinner> lstOfGameReport)
        {
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("************ ((The Final Game Report)) *************");
            for (int i = 0; i < lstOfGameReport.Count; i++)
            {
                Console.WriteLine("Round{0} winner is: {1}", i + 1, lstOfGameReport[i]);
            }

            enRoundWinner winner = enRoundWinner.Both;

            if (lstOfGameReport.Where(e => e == enRoundWinner.Computer).Count() !=
                lstOfGameReport.Where(e => e == enRoundWinner.User).Count())
            {
                if (lstOfGameReport.Where(e => e == enRoundWinner.Computer).Count() >
                lstOfGameReport.Where(e => e == enRoundWinner.User).Count())
                {
                    winner = enRoundWinner.Computer;
                }
                else
                {
                    winner = enRoundWinner.User;
                }
            }


            Console.WriteLine();
            Console.WriteLine();

            Console.WriteLine("The FINAL WINNER IS: {0}", winner);
            Console.WriteLine();
            Console.WriteLine();
        }
    }
}
